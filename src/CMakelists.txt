include(FetchContent)

project(emulator)

FetchContent_Declare(
    SDL2
    GIT_REPOSITORY  https://github.com/libsdl-org/SDL
    GIT_TAG         55b03c7493a7abed33cf803d1380a40fa8af903f  # release-2.24.2
    GIT_PROGRESS    TRUE
)

FetchContent_MakeAvailable(SDL2)

set(SDL_LIBRARIES ${SDL_LIBRARIES} SDL2main SDL2-static)

add_executable(
  emulator 
  main.cpp
)

add_library(
  emulator_core 
  SHARED
  cpu.cpp
  file_handling.cpp
  ram.cpp
  render.cpp
  sprite_renderer.cpp
  utils.cpp
  cartridge.cpp
  emulator.cpp
  run_options.cpp
  ppu.cpp
  input_handler.cpp
)

cmake_minimum_required(VERSION 3.25)

include(FetchContent)
FetchContent_Declare(
  googletest
  URL https://github.com/google/googletest/archive/03597a01ee50ed33e9dfd640b249b4be3799d395.zip
)
# For Windows: Prevent overriding the parent project's compiler/linker settings
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
FetchContent_MakeAvailable(googletest)

add_executable(
  tests
  tests/cpu_test.cpp
  tests/cart_test.cpp
)

set_property(TARGET emulator PROPERTY CXX_STANDARD 17)
set_property(TARGET emulator_core PROPERTY CXX_STANDARD 17)
set_property(TARGET tests PROPERTY CXX_STANDARD 17)

if("${CMAKE_CXX_COMPILER}" MATCHES "em\\+\\+")
  message("Emscripten is being used")
  set_target_properties(emulator PROPERTIES SUFFIX ".html")
  set_target_properties(emulator PROPERTIES LINK_FLAGS "--preload-file ./tetris.gb")
else()
  message("Not using emscripten")
endif()


target_link_libraries(
  tests
  GTest::gtest_main
  emulator_core
)

target_link_libraries(
  emulator_core
  ${SDL_LIBRARIES} 
)

target_link_libraries(
  emulator 
  emulator_core
)

enable_testing()
include(GoogleTest)
gtest_discover_tests(tests)
